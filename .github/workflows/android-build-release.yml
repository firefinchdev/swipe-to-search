# I'm adding a comment to make this file more readable

name: Android Build & Release

on:
  workflow_dispatch:
    inputs:
      version_bump_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: 'choice'
        options:
          - patch
          - minor
          - major

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Extract current version from build.gradle
      - name: Extract current version information
        id: current_version
        run: |
          VERSION_NAME=$(grep "versionName" app/build.gradle.kts | sed 's/.*versionName\s*=\s*\"\(.*\)\".*/\1/')
          VERSION_CODE=$(grep "versionCode" app/build.gradle.kts | sed 's/.*versionCode\s*=\s*\([0-9]*\).*/\1/')
          echo "CURRENT_VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "CURRENT_VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "Current version: $VERSION_NAME (code: $VERSION_CODE)"

      # Bump version based on selected type
      - name: Bump version
        id: bump_version
        run: |
          # Parse current version
          IFS='.' read -r -a version_parts <<< "${{ env.CURRENT_VERSION_NAME }}"
          MAJOR=${version_parts[0]}
          MINOR=${version_parts[1]}
          PATCH=${version_parts[2]}
          
          # Bump version based on type
          if [ "${{ github.event.inputs.version_bump_type }}" == "major" ]; then
            NEW_MAJOR=$((MAJOR + 1))
            NEW_MINOR=0
            NEW_PATCH=0
          elif [ "${{ github.event.inputs.version_bump_type }}" == "minor" ]; then
            NEW_MAJOR=$MAJOR
            NEW_MINOR=$((MINOR + 1))
            NEW_PATCH=0
          else
            NEW_MAJOR=$MAJOR
            NEW_MINOR=$MINOR
            NEW_PATCH=$((PATCH + 1))
          fi
          
          # Calculate new version
          NEW_VERSION_NAME="$NEW_MAJOR.$NEW_MINOR.$NEW_PATCH"
          NEW_VERSION_CODE=$((${{ env.CURRENT_VERSION_CODE }} + 1))
          
          echo "NEW_VERSION_NAME=$NEW_VERSION_NAME" >> $GITHUB_ENV
          echo "NEW_VERSION_CODE=$NEW_VERSION_CODE" >> $GITHUB_ENV
          echo "Version bumped to: $NEW_VERSION_NAME (code: $NEW_VERSION_CODE)"

      # Update version in build.gradle
      - name: Update version in build.gradle
        run: |
          # Replace version name
          sed -i "s/versionName = \"${{ env.CURRENT_VERSION_NAME }}\"/versionName = \"${{ env.NEW_VERSION_NAME }}\"/g" app/build.gradle.kts
          
          # Replace version code
          sed -i "s/versionCode = ${{ env.CURRENT_VERSION_CODE }}/versionCode = ${{ env.NEW_VERSION_CODE }}/g" app/build.gradle.kts
          
          echo "Updated version in build.gradle to ${{ env.NEW_VERSION_NAME }} (code: ${{ env.NEW_VERSION_CODE }})"

      - name: Create keystore file
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/keystore.jks

      - name: Update gradle.properties with signing configs
        run: |
          echo "SIGNING_STORE_FILE=keystore.jks" >> gradle.properties
          echo "SIGNING_KEY_ALIAS=${{ secrets.KEYSTORE_ALIAS }}" >> gradle.properties
          echo "SIGNING_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> gradle.properties
          echo "SIGNING_KEY_PASSWORD=${{ secrets.KEYSTORE_KEY_PASSWORD }}" >> gradle.properties

      # Build the release APK and App Bundle
      - name: Build release APK and AAB
        run: |
          ./gradlew assembleRelease bundleRelease

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Commit version bump to main
        run: |
          git add app/build.gradle.kts
          git commit -m "Bump version to ${{ env.NEW_VERSION_NAME }} (code: ${{ env.NEW_VERSION_CODE }})"
          git push origin HEAD:main

      - name: Create Git Tag
        run: |
          git tag v${{ env.NEW_VERSION_NAME }}
          git push origin v${{ env.NEW_VERSION_NAME }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ env.NEW_VERSION_NAME }} (${{ env.NEW_VERSION_CODE }})
          tag_name: v${{ env.NEW_VERSION_NAME }}
          draft: false
          prerelease: false
          files: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/bundle/release/app-release.aab
          body: |
            Release version ${{ env.NEW_VERSION_NAME }} (code ${{ env.NEW_VERSION_CODE }})
            
            ### Assets
            - APK for direct installation
            - AAB for Google Play Store submission
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}